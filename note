项目架构:(其实本项目是基于guns框架,参考https://www.cnblogs.com/byronliu029/p/9386193.html)
GEEKQ-CM
        |_ guns-admin -- 登陆模块
        |_ guns-api -- 影院api接口
        |_ guns-cinema -- 影院模块
        |_ guns-core -- 核心core包
        |_ guns-film -- film模块
        |_ guns-gateway -- 网关模块
        |_ guns-generator -- 生成模块
        |_ guns-order -- 订单模块
        |_ guns-rest  -- rest模块
        |_ guns-user  -- 用户模块
        |_ guns-pay -- 支付模块
        
dubbo-monitor和brave负责[监控中心],与dubbo-admin做控制展示交互,zipkin应该是配合dubbo-monitor做展示
核心部分是服务网关(服务聚合,权限控制,hystrix熔断...)和dubbo提供商(各个业务模块)
以上由openstry做负载均衡,zookeeper做服务发现,由[监控中心]监控

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

admin:
配置文件:
1. spring-devtools.properties:配置了restart.include.beetl
2. application.yml:配置了port,自定义了一些配置,spring.profiles.active,前端路径配置,spring.mvc.devtools.restart(应该是热部署/重启的,需要在pom里加spring-boot-devtools)
        文件大小,mybatis-typeAliasesPackage,log路径
3. ehcache.xml:ehcache配置,很详细介绍
4. logback-spring.xml:可以根据profiles做不同的日志配置


前端(略)


后端:
1. guns:两个启动类(存疑,见注释)
2. guns.config:包括EhCacheConfig,SpringSessionConfig(分布式时用redis共享session,目前关闭)和SwaggerConfig
3. guns.properties:两个类读配置文件,给其他类用
4. guns.web:WebConfig进行了swagger,详细Druid,XSS,listener和验证码的配置.ShiroConfig大部分和MySpringBoot类似
5. guns.core.aop:GlobalExceptionHandler全局异常处理,LogAop是全局异常处理,看似简单很有技术含量,PermissionAop是自定义的权限检查,其实也可以用shiro自带的@RequiresPermissions,
          比如MySpringBoot里就用的这个,反而感觉简单
6. guns.beetl:BeetlConfiguration是配置类不用看,ShiroExt是一个工具类,封装了shiro权限的一些方法,最简单的如SecurityUtils.getSubject(),而MySpringBoot的LoginController里,
          每次都要Subject subject = SecurityUtils.getSubject()一遍,当然不好了
7. guns.annotion:BussinessLog记需要记录的业务日志,Permission是角色的英文名称(估计是sys_role里的tips?)
8. guns.constant:两个接口,这样省了public static final,用的时候直接接口.变量就行了
9. guns.cache:两个标识缓存的接口
10.guns.dictmap(.base):里面的类在controller方法上的@BusinessLog的dict使用,就是根据key在对应类的map里取一个中文解释罢了.AbstractDictMap是基类
11.guns.dictmap/constant.factory:ConstantFactory引入了一些mapper,查一些东西,工具类.PageFactory配合mybatisplus的Page做默认设置.DictFieldWarpperFactory用来invoke反射方法
12.guns.state:全是enum,比如是ALL(0, null)的,那么就有Integer val;String message;两个属性;是LOGIN("登录日志"),的就只有一个属性String message;了.valueOf方法用来根据int获取String
13.guns.exception:一个自定义的空InvalidKaptchaException类,一个BizExceptionEnum类,错误码和错误说明
14.guns.intercept:SessionHolderInterceptor用来做静态调用session的"拦截器",GunsUserFilter同quick-cli里的StatelessAccessControlFilter,是认证过滤器
15.guns.listener:ConfigListener是一个监听器,感觉就是为了获取项目运行环境的路径,有些类需要这个路径
16.guns.log:LogManager开了定时线程(延后10ms)写log,LogObjectHolder用来临时存放被修改的bean
17.guns.log.factory:LogFactory是工厂类,用静态方法返回Log实体.LogTaskFactory的静态方法返回TimerTask,TimerTask里做了日志插入,这些人物就在LogManager的线程里做
18.guns.shiro:ShiroDbRealm就是自定义Realm,ShiroKit是简单的Shiro工具类,ShiroUser是自定义的Authentication对象,主要为了ShiroDbRealm里的SimpleAuthenticationInfo
19.guns.shiro.check:PermissionCheckFactory定义了权限自定义检查方法,PermissionCheckManager调用这些方法.主要配合controller方法上的@Permission自定义检查
20.guns.shiro.factory:ShiroFactroy实际上也是一个工具类
21.guns.tag:可能和beetl有关,不用看
22.guns.util:一些工具类,比如根据反射比较两个实体的不同
23.guns.code.controller/factory/service:代码生成控制器,不用看
24.guns.system.controller/dao/mapping/model/service/service.impl:全是偏系统(admin)的,不是业务的,可以细看,暂时跳了
25.guns.system.factory:工具类,dto转entity,值得一看
26.guns.system.transfer:似乎是Dto包
27.guns.warpper:在BaseControllerWarpper(控制器查询结果的包装类基类)里调用,主要是controller里返回List<Map<String, Object>>的时候(如UserMgrController#list),往map里加点额外属性

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
api:(类似dubbo-api)
配置文件:
1. default-config.properties:配置了spring.aop.proxy-target-class=true(使用cglib代理),mybatis-plus和beetl(和数据库配置无关,配了一些参数)


前端(略)


后端:
1. api.cinema:cinema相关的interface
2. api.cinema.vo:全部注解了@Data(lombok)的VO(get，set和toString)
3. api.film:film相关的interface
4. api.film.vo:类似
5. api.order/user.*:同上

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
cinema:(类似dubbo-server)
配置文件:
1. application.yml:port,mybatis-plus,mysql,dubbo,log的配置

前端(略)

后端:
1. rest:类似spring5和guns-admin的两个启动类,注解了@EnableDubboConfiguration(可能也不必要)
2. rest.common:





